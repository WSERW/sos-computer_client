<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="utf-8" />
  <link rel="icon" href="/favicon.ico" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <meta name="theme-color" content="#000000" />
  <meta name="description" content="Sos Computer Academy" />
  <link rel="apple-touch-icon" href="/favicon.ico" />
  <!--
      manifest.json provides metadata used when your web app is installed on a
      user's mobile device or desktop. See https://developers.google.com/web/fundamentals/web-app-manifest/
    -->
  <link rel="manifest" href="/manifest.json" />
  <!--
      Notice the use of  in the tags above.
      It will be replaced with the URL of the `public` folder during the build.
      Only files inside the `public` folder can be referenced from the HTML.

      Unlike "/favicon.ico" or "favicon.ico", "/favicon.ico" will
      work correctly both with client-side routing and a non-root public URL.
      Learn how to configure a non-root public URL by running `npm run build`.
    -->
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Nunito:wght@200;300;400;500;600;700;800;900;1000&display=swap"
    rel="stylesheet">
  <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@200;300;400;500;600;700;800;900;1000&display=swap"
    rel="stylesheet">
  <title>Sos Computer Academy</title>
  <style>
    .preloader {
      position: fixed;
      background-color: white;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
      z-index: 9999;
      display: flex;
      justify-content: center;
      align-items: center;
      flex-direction: column;
      transition: 0.5s;
      filter: contrast(10);
      /* opacity: 0; */
    }

    .preloader_body {
      height: 100vh;
      overflow-y: hidden;
    }

    .preloader_icon {
      font-size: 50px;
    }

    .preloader_icon {
      width: 100%;
      text-align: center;
      position: absolute;
      font-size: 100px;
      font-family: 'Raleway-Black', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
      font-weight: 700;
      margin: 0;
      color: black;
      z-index: 999;
      --placholder-color: white text-shadow: 4px 4px 120px var(--placholder-color),
        -4px -4px 120px var(--placholder-color),
        -4px 4px 120px var(--placholder-color), ,
        4px -4px 120px var(--placholder-color),
      ;
    }

    @keyframes anim {
      0% {
        opacity: 0;
        filter: blur(500px)
      }

      10% {
        opacity: 0;
      }

      90% {
        opacity: 1;
      }

      100% {
        opacity: 1;
        filter: blur(2px)
      }
    }

    .A {
      filter: blur(2px);
      animation: anim 2s infinite alternate-reverse;
      animation-delay: 1s;

    }

    .B {
      opacity: 0;
      filter: blur(50px);
      animation: anim 2s infinite alternate;
      animation-delay: 1s;

    }
  </style>
<script defer src="/static/js/bundle.js"></script></head>

<body>
  <div class="preloader">
    <div class="preloader_icon A">SOS<br>COMPUTER</div>
    <div class="preloader_icon B">ACADEMY</div>

  </div>
  <noscript>You need to enable JavaScript to run this app.</noscript>
  <div id="root"></div>
  <!--
      This HTML file is a template.
      If you open it directly in the browser, you will see an empty page.

      You can add webfonts, meta tags, or analytics to this file.
      The build step will place the bundled scripts into the <body> tag.

      To begin the development, run `npm start` or `yarn start`.
      To create a production bundle, use `npm run build` or `yarn build`.
    -->
  <script>
    console.log(`░░░░░░░░░░░░░░░░░░░░▄▄▄▄▄▄▄░░░░░░░
  ░░░░░░░░▄▄▄░░░░░░▄███████████▄░░░░
  ░░░░▄█████████▄▄███████████████▄░░
  ░░██████████████████████▀░░░░▀▀▀█▄
  ░▀▀░░░▄▄██████████████████▄░░░░░░░
  ░░░▄████████████████████████▄░░░░░
  ░░▄████▀▀██████▀████░░▀██████▄░░░░
  ░▄███▀░░██████░░░███▄░░░░█████░░░░
  ░██▀░░░██████░░░░████░░░░░████░░░░
  ░█▀░░░░█████░░░░░█████░░░░░██▀░░░░
  ░▀░░░░░█████░░░░░█████░░░░░██░░░░░
  ░░░░░░░░███░░░░░░█████░░░░░▀░░░░░░
  ░░░░░░░░░██░░░░░░█████░░░░░░░░░░░░
  ░░░░░░░░░░▀█░░░░░█████░░░░░░░░░░░░
  ░░░░░░░░░░░░░░░░██████░░░░░░░░░░░░
  ░░░░░░░░░░░░░░░▄██████░░░░░░░░░░░░
  ░░░░░░░░░▄▄▄▄▄▄███████▄▄░░░░░░░░░░
  ▄▄▄██████████████████████▄▄▄░░░░░░
  ▀█████████████████████████▀▀░░░░░░ `)

    console.log('SOS COMPUTER ACADEMY')


    let preload = document.querySelector('.preloader');
    let preloadTime = 1000;

    window.addEventListener('load', function () {
      if (sessionStorage.getItem('preload')) {
        preloadTime = 500
      }
      setTimeout(function () {
        preload.style.opacity = 0;
        preload.style.zIndex = -1;
        document.body.classList.remove('preloader_body');
      }, preloadTime);
      setTimeout(function () {
        preload.remove(); //оставляет артефактный скроллбар по ширине
        sessionStorage.setItem('preload', true);
      }, preloadTime + 5000);

    })
  </script>
</body>

</html>